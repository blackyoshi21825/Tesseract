# Test cases for break and continue statements

# Test 1: Basic break in loop
::print "Test 1: Basic break in loop";
loop$i := 1 => 10 {
    if$ i == 5 {
        break$;
    }
    ::print i;
}

# Test 2: Basic continue in loop
::print "Test 2: Basic continue in loop";
loop$i := 1 => 5 {
    if$ i == 3 {
        continue$;
    }
    ::print i;
}

# Test 3: Break in while loop
::print "Test 3: Break in while loop";
let$counter := 0;
while$ counter < 10 {
    let$counter := counter + 1;
    if$ counter == 4 {
        break$;
    }
    ::print counter;
}

# Test 4: Continue in while loop
::print "Test 4: Continue in while loop";
let$j := 0;
while$ j < 5 {
    let$j := j + 1;
    if$ j == 3 {
        continue$;
    }
    ::print j;
}

# Test 5: Break in foreach loop
::print "Test 5: Break in foreach loop";
let$numbers := [1, 2, 3, 4, 5, 6];
foreach$num in numbers {
    if$ num == 4 {
        break$;
    }
    ::print num;
}

# Test 6: Continue in foreach loop
::print "Test 6: Continue in foreach loop";
let$fruits := ["apple", "banana", "cherry", "date"];
foreach$fruit in fruits {
    if$ fruit == "banana" {
        continue$;
    }
    ::print fruit;
}

# Test 7: Nested loops with break (inner loop)
::print "Test 7: Nested loops with break (inner loop)";
loop$i := 1 => 3 {
    ::print "Outer: @s" (i);
    loop$j := 1 => 5 {
        if$ j == 3 {
            break$;
        }
        ::print "  Inner: @s" (j);
    }
}

# Test 8: Nested loops with continue (inner loop)
::print "Test 8: Nested loops with continue (inner loop)";
loop$i := 1 => 2 {
    ::print "Outer: @s" (i);
    loop$j := 1 => 4 {
        if$ j == 2 {
            continue$;
        }
        ::print "  Inner: @s" (j);
    }
}

::print "All break and continue tests completed!";